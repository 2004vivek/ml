import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

#load a data set
data=pd.read_csv('User_Data.csv')
x=data[['Age','EstimatedSalary']].values
y=data['Purchased'].values

#split the dataset into training and test set
from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.25,random_state=0)

#standarderised the age and salaryrandom_state
from sklearn.preprocessing import StandardScaler
st_s=StandardScaler()
x_train=st_s.fit_transform(x_train)
x_test=st_s.transform(x_test)

#train the model
from sklearn.linear_model import LogisticRegression
model=LogisticRegression(random_state=0)
model.fit(x_train,y_train)

#make prediction
y_pred=model.predict(x_test)

#visulase the training data
from matplotlib.colors import ListedColormap
x_set,y_set=x_train,y_train
x1,y1=np.meshgrid(
       np.arange(start=x_set[:, 0].min() - 1, stop=x_set[:, 0].max() + 1, step=0.01),
    np.arange(start=x_set[:, 1].min() - 1, stop=x_set[:, 1].max() + 1, step=0.01)
)
plt.xlim(x1.min(),x1.max());
plt.ylim(y1.min(),y1.max());

for i,j in enumerate(np.unique(y_set)):
  plt.scatter(
  x_set[y_set==j,0],
  x_set[y_set==j,1],
 c=ListedColormap(('red', 'green'))(i),
        label=j
  )
plt.xlabel('Age')
plt.ylabel('Estimated Salary')
plt.legend()
plt.show()
